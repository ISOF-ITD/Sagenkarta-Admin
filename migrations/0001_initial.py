# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-10-30 12:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('folkminnen', 'Folkminnen'), ('sägner', 'Sägner'), ('frågelista', 'Frågelista'), ('webbfrågelista', 'Webbfrågelista'), ('matkarta', 'Matkarta'), ('digitalt-kulturarv', 'Digitalt kulturarv')], max_length=255)),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategorier',
                'db_table': 'categories_v2',
                'ordering': ['type'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CategoriesKlintberg',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'categories_klintberg',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Harad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('lan', models.CharField(blank=True, max_length=30, null=True)),
                ('landskap', models.CharField(blank=True, max_length=14, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Härad',
                'verbose_name_plural': 'Härads',
                'db_table': 'harad',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MetadataTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Metadata typ',
                'verbose_name_plural': 'Metadata typer',
                'db_table': 'metadata_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('female', 'Kvinna'), ('male', 'Man'), ('unknown', 'Okänd')], max_length=8)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='personer', verbose_name='Bildfil')),
                ('changedate', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Personer',
                'db_table': 'persons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonsPlaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(blank=True, choices=[('birth', 'birth'), ('home', 'home')], max_length=5, null=True)),
                ('person', models.ForeignKey(db_column='person', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Persons')),
            ],
            options={
                'db_table': 'persons_places',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Titel')),
                ('text', models.TextField(blank=True, null=True)),
                ('year', models.DateField(blank=True, null=True)),
                ('archive', models.CharField(blank=True, max_length=255, verbose_name='Arkiv')),
                ('archive_id', models.CharField(blank=True, max_length=1000)),
                ('type', models.CharField(choices=[('arkiv', 'Arkiv'), ('tryckt', 'Tryckt'), ('register', 'Register'), ('inspelning', 'Inspelning'), ('matkarta', 'Matkarta'), ('frågelista', 'Frågelista'), ('accessionsregister', 'Accessionsregister'), ('webbfrågelista', 'Webbfrågelista'), ('brev', 'Brev'), ('folkmusik', 'Folkmusik')], max_length=20, verbose_name='Materialtyp')),
                ('archive_page', models.CharField(blank=True, max_length=20, null=True)),
                ('total_pages', models.IntegerField(default=1)),
                ('source', models.TextField(blank=True, verbose_name='Källa')),
                ('comment', models.TextField(blank=True)),
                ('country', models.CharField(choices=[('sweden', 'Sverige'), ('norway', 'Norge'), ('none', 'Inget')], default='sweden', max_length=20)),
                ('language', models.CharField(choices=[('swedish', 'Svenska'), ('norwegian', 'Norska')], default='swedish', max_length=20)),
                ('changedate', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Uppteckning/inspelning',
                'verbose_name_plural': 'Uppteckningar och inspelningar',
                'db_table': 'records',
                'permissions': (('view_records', 'Kan visa postar'),),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(db_column='category', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Categories')),
                ('record', models.ForeignKey(db_column='record', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Records')),
            ],
            options={
                'db_table': 'records_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('image', 'Bildfil'), ('pdf', 'Pdf'), ('audio', 'Ljudfil')], max_length=30, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('record', models.ForeignKey(db_column='record', on_delete=django.db.models.deletion.CASCADE, related_name='media', to='Sagenkarta-Admin.Records')create),
            ],
            options={
                'db_table': 'records_media',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('record', models.ForeignKey(db_column='record', on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='Sagenkarta-Admin.Records')),
            ],
            options={
                'db_table': 'records_metadata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsPersons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(blank=True, choices=[('i', 'Informant'), ('c', 'Uppteckare'), ('sender', 'Avsändare'), ('receiver', 'Mottagare'), ('recorder', 'Intervjuare')], max_length=20, null=True)),
                ('person', models.ForeignKey(db_column='person', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Persons')),
                ('record', models.ForeignKey(db_column='record', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Records')),
            ],
            options={
                'db_table': 'records_persons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsPlaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('place_collected', 'Insamlingsort'), ('place_mentioned', 'Nämns i texten'), ('related_person_place', 'Födelseort/hemort'), ('dispatch_place', 'Avsändningsort'), ('destination_place', 'Destination')], default='place_collected', max_length=20, null=True)),
            ],
            options={
                'db_table': 'records_places',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Socken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('fylke', models.CharField(blank=True, max_length=50, null=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('harad', models.ForeignKey(blank=True, db_column='harad', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Sagenkarta-Admin.Harad')),
            ],
            options={
                'verbose_name': 'Socken',
                'verbose_name_plural': 'Socknar',
                'db_table': 'socken',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SockenV1',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('harad', models.IntegerField()),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('changedate', models.DateTimeField()),
            ],
            options={
                'db_table': 'socken_v1',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='recordsplaces',
            name='place',
            field=models.ForeignKey(db_column='place', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Socken'),
        ),
        migrations.AddField(
            model_name='recordsplaces',
            name='record',
            field=models.ForeignKey(db_column='record', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Records'),
        ),
        migrations.AddField(
            model_name='records',
            name='categories',
            field=models.ManyToManyField(through='Sagenkarta-Admin.RecordsCategory', to='Sagenkarta-Admin.Categories', verbose_name='Kategorier'),
        ),
        migrations.AddField(
            model_name='records',
            name='person_objects',
            field=models.ManyToManyField(through='Sagenkarta-Admin.RecordsPersons', to='Sagenkarta-Admin.Persons', verbose_name='Personer'),
        ),
        migrations.AddField(
            model_name='records',
            name='places',
            field=models.ManyToManyField(through='Sagenkarta-Admin.RecordsPlaces', to='Sagenkarta-Admin.Socken', verbose_name='Socken'),
        ),
        migrations.AddField(
            model_name='personsplaces',
            name='place',
            field=models.ForeignKey(db_column='place', on_delete=django.db.models.deletion.CASCADE, to='Sagenkarta-Admin.Socken'),
        ),
        migrations.AddField(
            model_name='persons',
            name='places',
            field=models.ManyToManyField(through='Sagenkarta-Admin.PersonsPlaces', to='Sagenkarta-Admin.Socken'),
        ),
        migrations.AddField(
            model_name='persons',
            name='record_objects',
            field=models.ManyToManyField(through='Sagenkarta-Admin.RecordsPersons', to='Sagenkarta-Admin.Records', verbose_name='Sägner'),
        ),
        migrations.AlterUniqueTogether(
            name='recordspersons',
            unique_together=set([('record', 'person')]),
        ),
    ]
